//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace CMSSolutions.Websites.VipHDCardServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicesSoapBinding", Namespace="http://interfaces")]
    public partial class ServicesService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback changePasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback logoutOperationCompleted;
        
        private System.Threading.SendOrPostCallback loginOperationCompleted;
        
        private System.Threading.SendOrPostCallback changeMPINOperationCompleted;
        
        private System.Threading.SendOrPostCallback cardChargingOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTransactionStatusOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public ServicesService() {
            this.Url = global::CMSSolutions.Websites.Properties.Settings.Default.CMSSolutions_Websites_VipHDCardServices_ServicesService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event changePasswordCompletedEventHandler changePasswordCompleted;
        
        /// <remarks/>
        public event logoutCompletedEventHandler logoutCompleted;
        
        /// <remarks/>
        public event loginCompletedEventHandler loginCompleted;
        
        /// <remarks/>
        public event changeMPINCompletedEventHandler changeMPINCompleted;
        
        /// <remarks/>
        public event cardChargingCompletedEventHandler cardChargingCompleted;
        
        /// <remarks/>
        public event getTransactionStatusCompletedEventHandler getTransactionStatusCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("changePasswordReturn")]
        public ChangeResponse changePassword(string transid, string username, string partnerID, string old_password, string new_password, string md5sessionid) {
            object[] results = this.Invoke("changePassword", new object[] {
                        transid,
                        username,
                        partnerID,
                        old_password,
                        new_password,
                        md5sessionid});
            return ((ChangeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void changePasswordAsync(string transid, string username, string partnerID, string old_password, string new_password, string md5sessionid) {
            this.changePasswordAsync(transid, username, partnerID, old_password, new_password, md5sessionid, null);
        }
        
        /// <remarks/>
        public void changePasswordAsync(string transid, string username, string partnerID, string old_password, string new_password, string md5sessionid, object userState) {
            if ((this.changePasswordOperationCompleted == null)) {
                this.changePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangePasswordOperationCompleted);
            }
            this.InvokeAsync("changePassword", new object[] {
                        transid,
                        username,
                        partnerID,
                        old_password,
                        new_password,
                        md5sessionid}, this.changePasswordOperationCompleted, userState);
        }
        
        private void OnchangePasswordOperationCompleted(object arg) {
            if ((this.changePasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changePasswordCompleted(this, new changePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("logoutReturn")]
        public LogoutResponse logout(string username, string partnerID, string Md5sessionID) {
            object[] results = this.Invoke("logout", new object[] {
                        username,
                        partnerID,
                        Md5sessionID});
            return ((LogoutResponse)(results[0]));
        }
        
        /// <remarks/>
        public void logoutAsync(string username, string partnerID, string Md5sessionID) {
            this.logoutAsync(username, partnerID, Md5sessionID, null);
        }
        
        /// <remarks/>
        public void logoutAsync(string username, string partnerID, string Md5sessionID, object userState) {
            if ((this.logoutOperationCompleted == null)) {
                this.logoutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnlogoutOperationCompleted);
            }
            this.InvokeAsync("logout", new object[] {
                        username,
                        partnerID,
                        Md5sessionID}, this.logoutOperationCompleted, userState);
        }
        
        private void OnlogoutOperationCompleted(object arg) {
            if ((this.logoutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.logoutCompleted(this, new logoutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("loginReturn")]
        public LoginResponse login(string username, string password, string partnerID) {
            object[] results = this.Invoke("login", new object[] {
                        username,
                        password,
                        partnerID});
            return ((LoginResponse)(results[0]));
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password, string partnerID) {
            this.loginAsync(username, password, partnerID, null);
        }
        
        /// <remarks/>
        public void loginAsync(string username, string password, string partnerID, object userState) {
            if ((this.loginOperationCompleted == null)) {
                this.loginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnloginOperationCompleted);
            }
            this.InvokeAsync("login", new object[] {
                        username,
                        password,
                        partnerID}, this.loginOperationCompleted, userState);
        }
        
        private void OnloginOperationCompleted(object arg) {
            if ((this.loginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.loginCompleted(this, new loginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("changeMPINReturn")]
        public ChangeResponse changeMPIN(string transid, string username, string partnerID, string old_mpin, string new_mpin, string md5sessionid) {
            object[] results = this.Invoke("changeMPIN", new object[] {
                        transid,
                        username,
                        partnerID,
                        old_mpin,
                        new_mpin,
                        md5sessionid});
            return ((ChangeResponse)(results[0]));
        }
        
        /// <remarks/>
        public void changeMPINAsync(string transid, string username, string partnerID, string old_mpin, string new_mpin, string md5sessionid) {
            this.changeMPINAsync(transid, username, partnerID, old_mpin, new_mpin, md5sessionid, null);
        }
        
        /// <remarks/>
        public void changeMPINAsync(string transid, string username, string partnerID, string old_mpin, string new_mpin, string md5sessionid, object userState) {
            if ((this.changeMPINOperationCompleted == null)) {
                this.changeMPINOperationCompleted = new System.Threading.SendOrPostCallback(this.OnchangeMPINOperationCompleted);
            }
            this.InvokeAsync("changeMPIN", new object[] {
                        transid,
                        username,
                        partnerID,
                        old_mpin,
                        new_mpin,
                        md5sessionid}, this.changeMPINOperationCompleted, userState);
        }
        
        private void OnchangeMPINOperationCompleted(object arg) {
            if ((this.changeMPINCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.changeMPINCompleted(this, new changeMPINCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("cardChargingReturn")]
        public ChargeReponse cardCharging(string transid, string username, string partnerID, string mpin, string target, string card_data, string md5sessionid) {
            object[] results = this.Invoke("cardCharging", new object[] {
                        transid,
                        username,
                        partnerID,
                        mpin,
                        target,
                        card_data,
                        md5sessionid});
            return ((ChargeReponse)(results[0]));
        }
        
        /// <remarks/>
        public void cardChargingAsync(string transid, string username, string partnerID, string mpin, string target, string card_data, string md5sessionid) {
            this.cardChargingAsync(transid, username, partnerID, mpin, target, card_data, md5sessionid, null);
        }
        
        /// <remarks/>
        public void cardChargingAsync(string transid, string username, string partnerID, string mpin, string target, string card_data, string md5sessionid, object userState) {
            if ((this.cardChargingOperationCompleted == null)) {
                this.cardChargingOperationCompleted = new System.Threading.SendOrPostCallback(this.OncardChargingOperationCompleted);
            }
            this.InvokeAsync("cardCharging", new object[] {
                        transid,
                        username,
                        partnerID,
                        mpin,
                        target,
                        card_data,
                        md5sessionid}, this.cardChargingOperationCompleted, userState);
        }
        
        private void OncardChargingOperationCompleted(object arg) {
            if ((this.cardChargingCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.cardChargingCompleted(this, new cardChargingCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://interfaces", ResponseNamespace="http://interfaces")]
        [return: System.Xml.Serialization.SoapElementAttribute("getTransactionStatusReturn")]
        public ChargeReponse getTransactionStatus(string transid, string username, string partnerID, string md5sessionid) {
            object[] results = this.Invoke("getTransactionStatus", new object[] {
                        transid,
                        username,
                        partnerID,
                        md5sessionid});
            return ((ChargeReponse)(results[0]));
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(string transid, string username, string partnerID, string md5sessionid) {
            this.getTransactionStatusAsync(transid, username, partnerID, md5sessionid, null);
        }
        
        /// <remarks/>
        public void getTransactionStatusAsync(string transid, string username, string partnerID, string md5sessionid, object userState) {
            if ((this.getTransactionStatusOperationCompleted == null)) {
                this.getTransactionStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTransactionStatusOperationCompleted);
            }
            this.InvokeAsync("getTransactionStatus", new object[] {
                        transid,
                        username,
                        partnerID,
                        md5sessionid}, this.getTransactionStatusOperationCompleted, userState);
        }
        
        private void OngetTransactionStatusOperationCompleted(object arg) {
            if ((this.getTransactionStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTransactionStatusCompleted(this, new getTransactionStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entities")]
    public partial class ChangeResponse {
        
        private string messageField;
        
        private string statusField;
        
        private string transidField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string transid {
            get {
                return this.transidField;
            }
            set {
                this.transidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entities")]
    public partial class ChargeReponse {
        
        private string amountField;
        
        private string messageField;
        
        private string responseamountField;
        
        private string statusField;
        
        private string transidField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string amount {
            get {
                return this.amountField;
            }
            set {
                this.amountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string responseamount {
            get {
                return this.responseamountField;
            }
            set {
                this.responseamountField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string transid {
            get {
                return this.transidField;
            }
            set {
                this.transidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entities")]
    public partial class LoginResponse {
        
        private string messageField;
        
        private string sessionidField;
        
        private string statusField;
        
        private string transidField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string sessionid {
            get {
                return this.sessionidField;
            }
            set {
                this.sessionidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string transid {
            get {
                return this.transidField;
            }
            set {
                this.transidField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://entities")]
    public partial class LogoutResponse {
        
        private string messageField;
        
        private string statusField;
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string message {
            get {
                return this.messageField;
            }
            set {
                this.messageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
        public string status {
            get {
                return this.statusField;
            }
            set {
                this.statusField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void changePasswordCompletedEventHandler(object sender, changePasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void logoutCompletedEventHandler(object sender, logoutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class logoutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal logoutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LogoutResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LogoutResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void loginCompletedEventHandler(object sender, loginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class loginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal loginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public LoginResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((LoginResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void changeMPINCompletedEventHandler(object sender, changeMPINCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class changeMPINCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal changeMPINCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChangeResponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChangeResponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void cardChargingCompletedEventHandler(object sender, cardChargingCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class cardChargingCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal cardChargingCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChargeReponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChargeReponse)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void getTransactionStatusCompletedEventHandler(object sender, getTransactionStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTransactionStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTransactionStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ChargeReponse Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ChargeReponse)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591